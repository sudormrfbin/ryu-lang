# serializer version: 1
# name: test_indexing
  dict({
    <class 'compiler.ast.StatementList'>: dict({
      'stmts': list([
        dict({
          <class 'compiler.ast.VariableDeclaration'>: dict({
            'ident': Token('IDENTIFIER', 'x'),
            'rvalue': dict({
              <class 'compiler.ast.ArrayLiteral'>: dict({
                'members': dict({
                  <class 'compiler.ast.ArrayElements'>: dict({
                    'members': list([
                      dict({
                        <class 'compiler.ast.ArrayElement'>: dict({
                          'element': dict({
                            <class 'compiler.ast.IntLiteral'>: dict({
                              'value': 2,
                            }),
                          }),
                        }),
                      }),
                      dict({
                        <class 'compiler.ast.ArrayElement'>: dict({
                          'element': dict({
                            <class 'compiler.ast.IntLiteral'>: dict({
                              'value': 3,
                            }),
                          }),
                        }),
                      }),
                    ]),
                  }),
                }),
              }),
            }),
          }),
        }),
        dict({
          <class 'compiler.ast.VariableDeclaration'>: dict({
            'ident': Token('IDENTIFIER', 'b'),
            'rvalue': dict({
              <class 'compiler.ast.Indexing'>: dict({
                'element': dict({
                  <class 'compiler.ast.Variable'>: dict({
                    'value': Token('IDENTIFIER', 'x'),
                  }),
                }),
                'index': dict({
                  <class 'compiler.ast.IntLiteral'>: dict({
                    'value': 1,
                  }),
                }),
              }),
            }),
          }),
        }),
      ]),
    }),
  })
# ---
# name: test_indexing.1
  dict({
    <class 'compiler.ast.StatementList'>: dict({
      'fields': dict({
        'stmts': list([
          dict({
            <class 'compiler.ast.VariableDeclaration'>: dict({
              'fields': dict({
                'rvalue': dict({
                  <class 'compiler.ast.ArrayLiteral'>: dict({
                    'fields': dict({
                      'members': dict({
                        <class 'compiler.ast.ArrayElements'>: dict({
                          'fields': dict({
                            'members': list([
                              dict({
                                <class 'compiler.ast.ArrayElement'>: dict({
                                  'fields': dict({
                                    'element': dict({
                                      <class 'compiler.ast.IntLiteral'>: dict({
                                        'fields': dict({
                                        }),
                                        'type': <class 'compiler.langtypes.Int'>,
                                      }),
                                    }),
                                  }),
                                  'type': <class 'compiler.langtypes.Int'>,
                                }),
                              }),
                              dict({
                                <class 'compiler.ast.ArrayElement'>: dict({
                                  'fields': dict({
                                    'element': dict({
                                      <class 'compiler.ast.IntLiteral'>: dict({
                                        'fields': dict({
                                        }),
                                        'type': <class 'compiler.langtypes.Int'>,
                                      }),
                                    }),
                                  }),
                                  'type': <class 'compiler.langtypes.Int'>,
                                }),
                              }),
                            ]),
                          }),
                          'type': <class 'compiler.langtypes.Int'>,
                        }),
                      }),
                    }),
                    'type': <class 'compiler.langtypes.Array'>,
                  }),
                }),
              }),
              'type': <class 'compiler.langtypes.Array'>,
            }),
          }),
          dict({
            <class 'compiler.ast.VariableDeclaration'>: dict({
              'fields': dict({
                'rvalue': dict({
                  <class 'compiler.ast.Indexing'>: dict({
                    'fields': dict({
                      'element': dict({
                        <class 'compiler.ast.Variable'>: dict({
                          'fields': dict({
                          }),
                          'type': <class 'compiler.langtypes.Array'>,
                        }),
                      }),
                      'index': dict({
                        <class 'compiler.ast.IntLiteral'>: dict({
                          'fields': dict({
                          }),
                          'type': <class 'compiler.langtypes.Int'>,
                        }),
                      }),
                    }),
                    'type': <class 'compiler.langtypes.Int'>,
                  }),
                }),
              }),
              'type': <class 'compiler.langtypes.Int'>,
            }),
          }),
        ]),
      }),
      'type': <class 'compiler.langtypes.Block'>,
    }),
  })
# ---
