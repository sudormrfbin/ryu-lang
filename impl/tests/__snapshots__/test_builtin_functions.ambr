# serializer version: 1
# name: test_match_array_empty_case[ast]
  dict({
    <class 'compiler.ast.variable.VariableDeclaration'>: dict({
      'ident': Token('IDENTIFIER', 'i'),
      'rvalue': dict({
        <class 'compiler.ast.function.FunctionCall'>: dict({
          'args': dict({
            <class 'compiler.ast.function.FunctionArgs'>: dict({
              'args': list([
                dict({
                  <class 'compiler.ast.literals.IntLiteral'>: dict({
                    'value': 2,
                  }),
                }),
                dict({
                  <class 'compiler.ast.literals.IntLiteral'>: dict({
                    'value': 3,
                  }),
                }),
              ]),
            }),
          }),
          'callee': dict({
            <class 'compiler.ast.variable.Variable'>: dict({
              'value': Token('IDENTIFIER', 'sum'),
            }),
          }),
        }),
      }),
    }),
  })
# ---
# name: test_match_array_empty_case[typed-ast]
  dict({
    <class 'compiler.ast.variable.VariableDeclaration'>: dict({
      'fields': dict({
        'rvalue': dict({
          <class 'compiler.ast.function.FunctionCall'>: dict({
            'fields': dict({
              'args': dict({
                <class 'compiler.ast.function.FunctionArgs'>: dict({
                  'fields': dict({
                    'args': list([
                      dict({
                        <class 'compiler.ast.literals.IntLiteral'>: dict({
                          'fields': dict({
                          }),
                          'type': <class 'compiler.langtypes.Int'>,
                        }),
                      }),
                      dict({
                        <class 'compiler.ast.literals.IntLiteral'>: dict({
                          'fields': dict({
                          }),
                          'type': <class 'compiler.langtypes.Int'>,
                        }),
                      }),
                    ]),
                  }),
                  'type': <class 'compiler.langtypes.Function.Params'>,
                }),
              }),
              'callee': dict({
                <class 'compiler.ast.variable.Variable'>: dict({
                  'fields': dict({
                  }),
                  'type': <class 'compiler.langtypes.Function'>,
                }),
              }),
            }),
            'type': <class 'compiler.langtypes.Int'>,
          }),
        }),
      }),
    }),
  })
# ---
