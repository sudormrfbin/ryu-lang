# serializer version: 1
# name: test_struct_def
  dict({
    <class 'compiler.ast.StructStmt'>: dict({
      'members': dict({
        <class 'compiler.ast.StructMembers'>: dict({
          'members': list([
            dict({
              <class 'compiler.ast.StructMember'>: dict({
                'ident_type': dict({
                  <class 'compiler.ast.TypeAnnotation'>: dict({
                    'ty': Token('IDENTIFIER', 'string'),
                  }),
                }),
                'name': Token('IDENTIFIER', 'name'),
              }),
            }),
            dict({
              <class 'compiler.ast.StructMember'>: dict({
                'ident_type': dict({
                  <class 'compiler.ast.TypeAnnotation'>: dict({
                    'ty': Token('IDENTIFIER', 'int'),
                  }),
                }),
                'name': Token('IDENTIFIER', 'age'),
              }),
            }),
          ]),
        }),
      }),
      'name': Token('IDENTIFIER', 'Person'),
    }),
  })
# ---
# name: test_struct_def.1
  dict({
    <class 'compiler.ast.StructStmt'>: dict({
      'fields': dict({
        'members': dict({
          <class 'compiler.ast.StructMembers'>: dict({
            'fields': dict({
              'members': list([
                dict({
                  <class 'compiler.ast.StructMember'>: dict({
                    'fields': dict({
                      'ident_type': dict({
                        <class 'compiler.ast.TypeAnnotation'>: dict({
                          'fields': dict({
                          }),
                          'type': <class 'compiler.langtypes.String'>,
                        }),
                      }),
                    }),
                    'type': <class 'compiler.langtypes.String'>,
                  }),
                }),
                dict({
                  <class 'compiler.ast.StructMember'>: dict({
                    'fields': dict({
                      'ident_type': dict({
                        <class 'compiler.ast.TypeAnnotation'>: dict({
                          'fields': dict({
                          }),
                          'type': <class 'compiler.langtypes.Int'>,
                        }),
                      }),
                    }),
                    'type': <class 'compiler.langtypes.Int'>,
                  }),
                }),
              ]),
            }),
            'type': <class 'compiler.langtypes.Struct.Members'>,
          }),
        }),
      }),
    }),
  })
# ---
# name: test_struct_init
  dict({
    <class 'compiler.ast.StatementList'>: dict({
      'stmts': list([
        dict({
          <class 'compiler.ast.StructStmt'>: dict({
            'members': dict({
              <class 'compiler.ast.StructMembers'>: dict({
                'members': list([
                  dict({
                    <class 'compiler.ast.StructMember'>: dict({
                      'ident_type': dict({
                        <class 'compiler.ast.TypeAnnotation'>: dict({
                          'ty': Token('IDENTIFIER', 'string'),
                        }),
                      }),
                      'name': Token('IDENTIFIER', 'name'),
                    }),
                  }),
                  dict({
                    <class 'compiler.ast.StructMember'>: dict({
                      'ident_type': dict({
                        <class 'compiler.ast.TypeAnnotation'>: dict({
                          'ty': Token('IDENTIFIER', 'int'),
                        }),
                      }),
                      'name': Token('IDENTIFIER', 'age'),
                    }),
                  }),
                ]),
              }),
            }),
            'name': Token('IDENTIFIER', 'Person'),
          }),
        }),
        dict({
          <class 'compiler.ast.VariableDeclaration'>: dict({
            'ident': Token('IDENTIFIER', 'p'),
            'rvalue': dict({
              <class 'compiler.ast.FunctionCall'>: dict({
                'args': dict({
                  <class 'compiler.ast.StructInitMembers'>: dict({
                    'members': list([
                      dict({
                        <class 'compiler.ast.StructInitMember'>: dict({
                          'name': Token('IDENTIFIER', 'name'),
                          'value': dict({
                            <class 'compiler.ast.literals.StringLiteral'>: dict({
                              'value': 'bob',
                            }),
                          }),
                        }),
                      }),
                      dict({
                        <class 'compiler.ast.StructInitMember'>: dict({
                          'name': Token('IDENTIFIER', 'age'),
                          'value': dict({
                            <class 'compiler.ast.literals.IntLiteral'>: dict({
                              'value': 23,
                            }),
                          }),
                        }),
                      }),
                    ]),
                  }),
                }),
                'callee': dict({
                  <class 'compiler.ast.Variable'>: dict({
                    'value': Token('IDENTIFIER', 'Person'),
                  }),
                }),
              }),
            }),
          }),
        }),
      ]),
    }),
  })
# ---
# name: test_struct_init.1
  dict({
    <class 'compiler.ast.StatementList'>: dict({
      'fields': dict({
        'stmts': list([
          dict({
            <class 'compiler.ast.StructStmt'>: dict({
              'fields': dict({
                'members': dict({
                  <class 'compiler.ast.StructMembers'>: dict({
                    'fields': dict({
                      'members': list([
                        dict({
                          <class 'compiler.ast.StructMember'>: dict({
                            'fields': dict({
                              'ident_type': dict({
                                <class 'compiler.ast.TypeAnnotation'>: dict({
                                  'fields': dict({
                                  }),
                                  'type': <class 'compiler.langtypes.String'>,
                                }),
                              }),
                            }),
                            'type': <class 'compiler.langtypes.String'>,
                          }),
                        }),
                        dict({
                          <class 'compiler.ast.StructMember'>: dict({
                            'fields': dict({
                              'ident_type': dict({
                                <class 'compiler.ast.TypeAnnotation'>: dict({
                                  'fields': dict({
                                  }),
                                  'type': <class 'compiler.langtypes.Int'>,
                                }),
                              }),
                            }),
                            'type': <class 'compiler.langtypes.Int'>,
                          }),
                        }),
                      ]),
                    }),
                    'type': <class 'compiler.langtypes.Struct.Members'>,
                  }),
                }),
              }),
            }),
          }),
          dict({
            <class 'compiler.ast.VariableDeclaration'>: dict({
              'fields': dict({
                'rvalue': dict({
                  <class 'compiler.ast.FunctionCall'>: dict({
                    'fields': dict({
                      'args': dict({
                        <class 'compiler.ast.StructInitMembers'>: dict({
                          'fields': dict({
                            'members': list([
                              dict({
                                <class 'compiler.ast.StructInitMember'>: dict({
                                  'fields': dict({
                                    'value': dict({
                                      <class 'compiler.ast.literals.StringLiteral'>: dict({
                                        'fields': dict({
                                        }),
                                        'type': <class 'compiler.langtypes.String'>,
                                      }),
                                    }),
                                  }),
                                  'type': <class 'compiler.langtypes.String'>,
                                }),
                              }),
                              dict({
                                <class 'compiler.ast.StructInitMember'>: dict({
                                  'fields': dict({
                                    'value': dict({
                                      <class 'compiler.ast.literals.IntLiteral'>: dict({
                                        'fields': dict({
                                        }),
                                        'type': <class 'compiler.langtypes.Int'>,
                                      }),
                                    }),
                                  }),
                                  'type': <class 'compiler.langtypes.Int'>,
                                }),
                              }),
                            ]),
                          }),
                          'type': <class 'compiler.langtypes.Struct.Members'>,
                        }),
                      }),
                      'callee': dict({
                        <class 'compiler.ast.Variable'>: dict({
                          'fields': dict({
                          }),
                          'type': <class 'compiler.langtypes.Struct'>,
                        }),
                      }),
                    }),
                    'type': <class 'compiler.langtypes.Struct'>,
                  }),
                }),
              }),
            }),
          }),
        ]),
      }),
    }),
  })
# ---
