# serializer version: 1
# name: test_while_stmt
  dict({
    <class 'compiler.ast.statements.StatementList'>: dict({
      'stmts': list([
        dict({
          <class 'compiler.ast.variable.VariableDeclaration'>: dict({
            'ident': Token('IDENTIFIER', 'x'),
            'rvalue': dict({
              <class 'compiler.ast.literals.IntLiteral'>: dict({
                'value': 5,
              }),
            }),
          }),
        }),
        dict({
          <class 'compiler.ast.WhileStmt'>: dict({
            'cond': dict({
              <class 'compiler.ast.Equality'>: dict({
                'left': dict({
                  <class 'compiler.ast.variable.Variable'>: dict({
                    'value': Token('IDENTIFIER', 'x'),
                  }),
                }),
                'op': Token('__ANON_4', '!='),
                'right': dict({
                  <class 'compiler.ast.literals.IntLiteral'>: dict({
                    'value': 0,
                  }),
                }),
              }),
            }),
            'true_block': dict({
              <class 'compiler.ast.statements.StatementBlock'>: dict({
                'stmts': list([
                  dict({
                    <class 'compiler.ast.variable.Assignment'>: dict({
                      'lvalue': Token('IDENTIFIER', 'x'),
                      'rvalue': dict({
                        <class 'compiler.ast.Term'>: dict({
                          'left': dict({
                            <class 'compiler.ast.variable.Variable'>: dict({
                              'value': Token('IDENTIFIER', 'x'),
                            }),
                          }),
                          'op': Token('MINUS', '-'),
                          'right': dict({
                            <class 'compiler.ast.literals.IntLiteral'>: dict({
                              'value': 1,
                            }),
                          }),
                        }),
                      }),
                    }),
                  }),
                ]),
              }),
            }),
          }),
        }),
      ]),
    }),
  })
# ---
# name: test_while_stmt.1
  dict({
    <class 'compiler.ast.statements.StatementList'>: dict({
      'fields': dict({
        'stmts': list([
          dict({
            <class 'compiler.ast.variable.VariableDeclaration'>: dict({
              'fields': dict({
                'rvalue': dict({
                  <class 'compiler.ast.literals.IntLiteral'>: dict({
                    'fields': dict({
                    }),
                    'type': <class 'compiler.langtypes.Int'>,
                  }),
                }),
              }),
            }),
          }),
          dict({
            <class 'compiler.ast.WhileStmt'>: dict({
              'fields': dict({
                'cond': dict({
                  <class 'compiler.ast.Equality'>: dict({
                    'fields': dict({
                      'left': dict({
                        <class 'compiler.ast.variable.Variable'>: dict({
                          'fields': dict({
                          }),
                          'type': <class 'compiler.langtypes.Int'>,
                        }),
                      }),
                      'right': dict({
                        <class 'compiler.ast.literals.IntLiteral'>: dict({
                          'fields': dict({
                          }),
                          'type': <class 'compiler.langtypes.Int'>,
                        }),
                      }),
                    }),
                    'type': <class 'compiler.langtypes.Bool'>,
                  }),
                }),
                'true_block': dict({
                  <class 'compiler.ast.statements.StatementBlock'>: dict({
                    'fields': dict({
                      'stmts': list([
                        dict({
                          <class 'compiler.ast.variable.Assignment'>: dict({
                            'fields': dict({
                              'rvalue': dict({
                                <class 'compiler.ast.Term'>: dict({
                                  'fields': dict({
                                    'left': dict({
                                      <class 'compiler.ast.variable.Variable'>: dict({
                                        'fields': dict({
                                        }),
                                        'type': <class 'compiler.langtypes.Int'>,
                                      }),
                                    }),
                                    'right': dict({
                                      <class 'compiler.ast.literals.IntLiteral'>: dict({
                                        'fields': dict({
                                        }),
                                        'type': <class 'compiler.langtypes.Int'>,
                                      }),
                                    }),
                                  }),
                                  'type': <class 'compiler.langtypes.Int'>,
                                }),
                              }),
                            }),
                          }),
                        }),
                      ]),
                    }),
                  }),
                }),
              }),
            }),
          }),
        ]),
      }),
    }),
  })
# ---
